{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sujungchoi/Desktop/Coding/MERN/Full_Stack_MERN/team-manager/client/src/views/Status.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"@reach/router\";\nimport Header from '../components/Header';\nimport { Table, Button } from 'semantic-ui-react';\nimport axios from 'axios';\n\nconst Status = props => {\n  _s();\n\n  const {\n    id\n  } = props;\n  const [players, setPlayers] = useState([]); // to get the player list\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8010/api/players\").then(res => {\n      setPlayers(res.data);\n    }).catch(err => console.log(err));\n  }, [props]); // to update the status\n\n  const updateStatus = (id, playing, notPlaying, undecided) => {\n    let currentStatus = {\n      playing: playing,\n      notPlaying: notPlaying,\n      undecided: undecided\n    };\n    axios.put(`http://localhost:8010/api/players/${id}`, currentStatus).then(res => {\n      setPlayers(players.map((player, idx) => {\n        if (player._id == res.data._id) {\n          player.playing = res.data.playing;\n          player.notPlaying = res.data.notPlaying;\n          player.undecided = res.data.undecided;\n        }\n\n        return player;\n      }));\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"statusTitle\",\n        children: \"Player Status - Game 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: \"ui yellow table\",\n          children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n            children: /*#__PURE__*/_jsxDEV(Table.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Player Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n            children: players.map((value, idx) => {\n              return /*#__PURE__*/_jsxDEV(Table.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/players/${value._id}`,\n                    children: value.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      \"marginRight\": \"50px\"\n                    },\n                    className: value.playing === true ? \"green\" : \"\",\n                    onClick: e => updateStatus(value._id, true, false, false),\n                    content: \"Playing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      \"marginRight\": \"50px\"\n                    },\n                    className: value.notPlaying === true ? \"red\" : \"\",\n                    onClick: e => updateStatus(value._id, false, true, false),\n                    content: \"Not Playing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: value.undecided === true ? \"yellow\" : \"\",\n                    onClick: e => updateStatus(value._id, false, false, true),\n                    content: \"Undecided\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 25\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 32\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Status, \"X/Tdqu5+Xz4mrEJLe3+u4Igo5rg=\");\n\n_c = Status;\nexport default Status;\n\nvar _c;\n\n$RefreshReg$(_c, \"Status\");","map":{"version":3,"sources":["/Users/sujungchoi/Desktop/Coding/MERN/Full_Stack_MERN/team-manager/client/src/views/Status.jsx"],"names":["React","useState","useEffect","Link","Header","Table","Button","axios","Status","props","id","players","setPlayers","get","then","res","data","catch","err","console","log","updateStatus","playing","notPlaying","undecided","currentStatus","put","map","player","idx","_id","value","name","e"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Link} from \"@reach/router\";\nimport Header from '../components/Header';\nimport { Table, Button } from 'semantic-ui-react'\nimport axios from 'axios';\n\nconst Status = (props) => {\n    const {id} = props;\n    const [players, setPlayers] = useState([]);\n\n    // to get the player list\n    useEffect(() => {\n        axios.get(\"http://localhost:8010/api/players\")\n            .then(res => {\n                setPlayers(res.data);\n            })\n            .catch(err => console.log(err))\n    }, [props]);\n    \n    // to update the status\n    const updateStatus = (id, playing, notPlaying, undecided) => {\n        let currentStatus = {\n            playing: playing,\n            notPlaying: notPlaying,\n            undecided: undecided\n        };\n        \n        axios.put(`http://localhost:8010/api/players/${id}`, currentStatus) \n            .then(res => {\n                setPlayers(players.map((player, idx) => {\n                    if (player._id == res.data._id){\n                        player.playing = res.data.playing;\n                        player.notPlaying = res.data.notPlaying;\n                        player.undecided = res.data.undecided;\n                    } \n                    return player;\n                }));\n                console.log(res.data);\n            })\n            .catch(err => console.log(err));\n        }\n    return (\n        <div>\n            <Header />\n            <div className=\"listContent\">\n                <h1 className=\"statusTitle\">Player Status - Game 1</h1>\n                <div className=\"table\">\n                <Table className=\"ui yellow table\">\n                    <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Player Name</Table.HeaderCell>\n                        <Table.HeaderCell>Actions</Table.HeaderCell>\n                    </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {players.map((value, idx) => {\n                        return <Table.Row key={idx}>\n                        <Table.Cell>\n                            <Link to={`/players/${value._id}`}>{value.name}</Link>\n                        </Table.Cell>\n                        <Table.Cell>\n                            <Button style={{\"marginRight\": \"50px\"}} \n                            className={ value.playing === true ? \"green\" : \"\"}\n                            onClick={(e) => updateStatus(value._id, true, false, false)}\n                            content='Playing' />\n                            <Button style={{\"marginRight\": \"50px\"}} \n                            className={ value.notPlaying === true ? \"red\" : \"\"}\n                            onClick={(e) => updateStatus(value._id, false, true, false)}                        \n                            content='Not Playing' />\n                            <Button \n                            className={ value.undecided === true ? \"yellow\" : \"\"}\n                            onClick={(e) => updateStatus(value._id, false, false, true)}                                  \n                            content='Undecided' />\n                        </Table.Cell>\n                        </Table.Row>\n                        })}\n                    </Table.Body>\n                </Table>\n                </div>\n         </div>\n        </div>\n    )\n}\n\nexport default Status;\n\n"]},"metadata":{},"sourceType":"module"}